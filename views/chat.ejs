<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Trybe Chat</title>
</head>
<body>
  <h1>Trybe Chat</h1>
  <div>
    <h3>Online</h3>
    <ul id="online-user"></ul>
  </div>
  <div>
    <h3>Mensagens</h3>
    <ul id="messages">
      <% messages.forEach(({nickname, message, timestamp}) => { %>
        <li data-testid="message"><%= `${timestamp} - ${nickname}: ${message}` %></li>
      <%})%>
    </ul>
  </div>
  <form id="container">
    <input id="nickname-box" autocomplete="on" data-testid="nickname-box"/>
    <button data-testid="nickname-button">Alterar nickname</button>
  </form>
  <form id="message-form" action="">
    <input id="message-box" autocomplete="on" data-testid="message-box"/>
    <button data-testid="send-button">Enviar</button>
  </form>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    
    const socket = io();
    let user = '';
    window.onbeforeunload = () => {
      socket.disconnect();
    };
    window.onload = () => {
    user = Array.from(Array(16), 
  () => Math.floor(Math.random() * 36).toString(36)).join(''); // https://stackoverflow.com/questions/10726909/random-alpha-numeric-string-in-javascript
    document.getElementById('nickname-box').value = user;
    socket.emit('new-user', user);
    }
  
    const form = document.getElementById('form');
    const message = document.getElementById('message-box');
    const nickname = document.getElementById('nickname-box');
    const chatBox = document.getElementById('message-form');
    
    
    const button = document.getElementById('nickname-button');
    const container = document.getElementById('container');
    
    container.addEventListener('submit', (element) => {
      element.preventDefault();
      socket.emit('edit-user', nickname.value);
    });

    nickname.addEventListener('click', (element) => {
        nickname.value = '';
    });
    
    chatBox.addEventListener('submit', (element) => {
      element.preventDefault();
      if (message.value && nickname.value) {
        socket.emit('message', {chatMessage: message.value, nickname: nickname.value});
        input.value = '';
      }
    });

    socket.on('message', (message) => {
      const messages = document.getElementById('messages');
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'message');
      li.textContent = message;
      messages.appendChild(li);
    });

    socket.on('online', (online) => {
      const ul = document.getElementById('online-user');
      while (ul.childNodes.length > 0) {
        ul.removeChild(ul.lastChild);
      }
      const index = online.findIndex((item) => item.nickname === user);
      const currentUser = online[index];
      online.splice(index, 1);
      online.unshift(currentUser);
      online.forEach((user) => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.textContent = user.nickname;
        ul.appendChild(li);
      })
    });
  </script>
</body>
</html> 
