<!DOCTYPE html>
<html>

<head>
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <title>WebChat Project</title>
</head>

<body>
    <span id="username"></span>

    <% history.forEach((e)=> { %> <p data-testid="message">
            <%= ` ${e.timestamp} ${e.nickname} ${e.message}` %>
        </p>
        <% }) %>

            <ul id="online"></ul>

            <ul id="messages"></ul>

            <form>
                <input type="text" id="nicknameInput" data-testid="nickname-box">
                <button type="button" id="nicknameButton" data-testid="nickname-button">New</button>
            </form>

            <form>
                <input type="text" id="messageInput" data-testid="message-box" type="text">
                <button type="button" id="sendButton" data-testid="send-button">Send Message</button>
            </form>

            <script>
                let socket = io("http://localhost:3000");
                let nicknameInput = document.querySelector('#nicknameInput');
                let nicknameButton = document.querySelector('#nicknameButton');
                let username = document.querySelector('#username');
                let messageList = document.getElementById('messages');
                let sendButton = document.querySelector('#sendButton');
                let messageInput = document.querySelector('#messageInput');
                let online = document.querySelector('#online');


                sendButton.addEventListener('click', () => {
                    event.preventDefault();
                    let message = messageInput.value;
                    let chatUsername = username.innerHTML;
                    socket.emit('message', { chatMessage: message, nickname: chatUsername });
                    messageInput.value = '';
                });


                nicknameButton.addEventListener('click', () => {
                    let nickname = nicknameInput.value;
                    username.innerHTML = nickname;
                    socket.emit('updateNickname', nickname);
                    nicknameInput.value = '';
                });

                socket.on("username", (data) => {
                    username.innerHTML = data;
                });

                socket.on("message", (data) => {
                    let message = document.createElement('li');
                    message.innerText = data;
                    message.setAttribute('data-testid', 'message');
                    messageList.appendChild(message);
                });

                socket.on("online", (data) => {
                    online.innerHTML = '';
                    const userSession = data.find((e) => e.socketId === socket.id);
                    const test = document.createElement('li');
                    test.innerHTML = userSession.nickname;
                    test.setAttribute('data-testid', 'online-user');
                    online.appendChild(test);
                    const restUsers = data.filter((e) => e.socketId !== socket.id);
                    restUsers.forEach((e) => {
                        const usersOnline = document.createElement('li');
                        usersOnline.innerHTML = e.nickname;
                        usersOnline.setAttribute('data-testid', 'online-user');
                        online.appendChild(usersOnline);
                    });
                });
            </script>
  </body>
</html>